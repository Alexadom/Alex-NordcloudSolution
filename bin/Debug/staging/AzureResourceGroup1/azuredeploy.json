{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "replicationVaultSettings_default_migrationSolutionId": {
      "type": "SecureString"
    },
    "virtualMachines_App_VM1_name": {
      "defaultValue": "App-VM1",
      "type": "String"
    },
    "virtualMachines_App_VM2_name": {
      "defaultValue": "App-VM2",
      "type": "String"
    },
    "virtualMachines_App_VM3_name": {
      "defaultValue": "App-VM3",
      "type": "String"
    },
    "virtualMachines_App_VM4_name": {
      "defaultValue": "App-VM4",
      "type": "String"
    },
    "vaults_RSV_test_name": {
      "defaultValue": "RSV-test",
      "type": "String"
    },
    "publicIPAddresses_AppLB_IP_name": {
      "defaultValue": "AppLB-IP",
      "type": "String"
    },
    "virtualMachines_OracleDB_VM_name": {
      "defaultValue": "OracleDB-VM",
      "type": "String"
    },
    "networkInterfaces_app_vm280_name": {
      "defaultValue": "app-vm280",
      "type": "String"
    },
    "networkInterfaces_app_vm1617_name": {
      "defaultValue": "app-vm1617",
      "type": "String"
    },
    "networkInterfaces_app_vm3391_name": {
      "defaultValue": "app-vm3391",
      "type": "String"
    },
    "networkInterfaces_app_vm4492_name": {
      "defaultValue": "app-vm4492",
      "type": "String"
    },
    "publicIPAddresses_App_VM1_ip_name": {
      "defaultValue": "App-VM1-ip",
      "type": "String"
    },
    "publicIPAddresses_App_VM2_ip_name": {
      "defaultValue": "App-VM2-ip",
      "type": "String"
    },
    "publicIPAddresses_App_VM3_ip_name": {
      "defaultValue": "App-VM3-ip",
      "type": "String"
    },
    "publicIPAddresses_App_VM4_ip_name": {
      "defaultValue": "App-VM4-ip",
      "type": "String"
    },
    "publicIPAddresses_myPublicIP_name": {
      "defaultValue": "myPublicIP",
      "type": "String"
    },
    "publicIPAddresses_VNet1GWpip_name": {
      "defaultValue": "VNet1GWpip",
      "type": "String"
    },
    "sshPublicKeys_OracleDB_VM_key_name": {
      "defaultValue": "OracleDB-VM_key",
      "type": "String"
    },
    "loadBalancers_AppLoadBalancer_name": {
      "defaultValue": "AppLoadBalancer",
      "type": "String"
    },
    "virtualNetworkGateways_VNet1GW_name": {
      "defaultValue": "VNet1GW",
      "type": "String"
    },
    "virtualNetworks_Test_alex_vnet_name": {
      "defaultValue": "Test-alex-vnet",
      "type": "String"
    },
    "networkInterfaces_oracledb_vm533_name": {
      "defaultValue": "oracledb-vm533",
      "type": "String"
    },
    "publicIPAddresses_OracleDB_VM_ip_name": {
      "defaultValue": "OracleDB-VM-ip",
      "type": "String"
    },
    "storageAccounts_appfilesharetest_name": {
      "defaultValue": "appfilesharetest",
      "type": "String"
    },
    "networkSecurityGroups_App_VM1_nsg_name": {
      "defaultValue": "App-VM1-nsg",
      "type": "String"
    },
    "networkSecurityGroups_App_VM2_nsg_name": {
      "defaultValue": "App-VM2-nsg",
      "type": "String"
    },
    "publicIPAddresses_myPublicIPOutbound_name": {
      "defaultValue": "myPublicIPOutbound",
      "type": "String"
    },
    "networkSecurityGroups_Test_alex_vnet_NSG_CASG_name": {
      "defaultValue": "Test-alex-vnet-NSG-CASG",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Compute/sshPublicKeys",
      "apiVersion": "2020-12-01",
      "name": "[parameters('sshPublicKeys_OracleDB_VM_key_name')]",
      "location": "westeurope",
      "properties": {
        "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDm/vjQFbq7bf/2QX9PcUcvZHF3\r\nJwtcoOimhpsdZmjD40PlRSGxhm+7jsW3VElozloZs5aSKpzHFTRhWk4ByDzRaBm+\r\nck34mN7IgsieaCfJeXULpPORpQkCdd+CSn+dIxaIIR1WaoXbXezgQcYAHtf0RQxi\r\nWK9msotS/uxMiTYAs6YoANPJlevGghX1CNJWndbUNUiOvwPiq9jfAgHi4hMc6ASx\r\n7dGGGK1gz8fFjaRCz+Vw3G83xwmmbdbt9YaoxmivYMx+g+uYGYxxopW2/S1GjX5A\r\ngTJsE+6aXfqlc3ez+tbtFu7Ww1iwrAqlYl3RoQjPKvg/67WbMLrsq9RfS1qUyttr\r\nsdNOFYd57XsB3OjLtMNsuO038oPyZ3B7cr+Q+W7FD8qHi73sf/E0m+/i0vfGmiks\r\n6s8FIGJMmGokYkTyn7Vxt1ZnHfqH+tVHwDYwlS7i1cYlFFbZnXICXRjEBxZLp5E0\r\ng3SY4pENEzJDkT0b75CvixuJMnrk5BySSC1/5O0= generated-by-azure\r\n"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_App_VM1_nsg_name')]",
      "location": "westeurope",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-101",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-102",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetPublic",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-104",
            "properties": {
              "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 107,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [
                "13",
                "17",
                "19",
                "22",
                "23",
                "53",
                "69",
                "111",
                "119",
                "123",
                "135",
                "137",
                "138",
                "139",
                "161",
                "162",
                "389",
                "445",
                "512",
                "514",
                "593",
                "636",
                "873",
                "1433",
                "1434",
                "1900",
                "2049",
                "2301",
                "2381",
                "3268",
                "3306",
                "3389",
                "4333",
                "5353",
                "5432",
                "5800",
                "5900",
                "5985",
                "5986",
                "6379",
                "7000",
                "7001",
                "7199",
                "9042",
                "9160",
                "9300",
                "11211",
                "16379",
                "26379",
                "27017"
              ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-103",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetSaw",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_App_VM2_nsg_name')]",
      "location": "westeurope",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-104",
            "properties": {
              "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 107,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [
                "13",
                "17",
                "19",
                "22",
                "23",
                "53",
                "69",
                "111",
                "119",
                "123",
                "135",
                "137",
                "138",
                "139",
                "161",
                "162",
                "389",
                "445",
                "512",
                "514",
                "593",
                "636",
                "873",
                "1433",
                "1434",
                "1900",
                "2049",
                "2301",
                "2381",
                "3268",
                "3306",
                "3389",
                "4333",
                "5353",
                "5432",
                "5800",
                "5900",
                "5985",
                "5986",
                "6379",
                "7000",
                "7001",
                "7199",
                "9042",
                "9160",
                "9300",
                "11211",
                "16379",
                "26379",
                "27017"
              ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-101",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-103",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetSaw",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-102",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetPublic",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name')]",
      "location": "westeurope",
      "tags": {
        "Creator": "Automatically added by CASG Azure Policy",
        "CASG-Info": "http://aka.ms/cssbaselinesecurity"
      },
      "properties": {
        "securityRules": [
          {
            "name": "CASG-Rule-104",
            "properties": {
              "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 109,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [
                "13",
                "17",
                "19",
                "22",
                "23",
                "53",
                "69",
                "111",
                "119",
                "123",
                "135",
                "137",
                "138",
                "139",
                "161",
                "162",
                "389",
                "445",
                "512",
                "514",
                "593",
                "636",
                "873",
                "1433",
                "1434",
                "1900",
                "2049",
                "2301",
                "2381",
                "3268",
                "3306",
                "3389",
                "4333",
                "5353",
                "5432",
                "5800",
                "5900",
                "5985",
                "5986",
                "6379",
                "7000",
                "7001",
                "7199",
                "9042",
                "9160",
                "9300",
                "11211",
                "16379",
                "26379",
                "27017"
              ],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-102",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetPublic",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-103",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "CorpNetSaw",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "CASG-Rule-101",
            "properties": {
              "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "Internet",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_AppLB_IP_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.86.57.21",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_App_VM1_ip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.86.82.178",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_App_VM2_ip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.56.41.106",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_App_VM3_ip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.56.42.136",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_App_VM4_ip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "51.124.125.202",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_myPublicIP_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.86.56.117",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_myPublicIPOutbound_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "52.136.192.247",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_OracleDB_VM_ip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "zones": [
        "1"
      ],
      "properties": {
        "ipAddress": "20.86.50.222",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIPAddresses_VNet1GWpip_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "ipAddress": "40.114.212.41",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2021-01-01",
      "name": "[parameters('vaults_RSV_test_name')]",
      "location": "westeurope",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-01-01",
      "name": "[parameters('storageAccounts_appfilesharetest_name')]",
      "location": "westeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachines_App_VM1_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm1617_name'))]"
      ],
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B4ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_App_VM1_name'), '_OsDisk_1_3a54a25e97554e0e8368fbf6c7e62d63')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_App_VM1_name'), '_OsDisk_1_3a54a25e97554e0e8368fbf6c7e62d63'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_App_VM1_name')]",
          "adminUsername": "demouser",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm1617_name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachines_App_VM2_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm280_name'))]"
      ],
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B4ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_App_VM2_name'), '_OsDisk_1_245e38d14ac444f3bb98c555480def5b')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_App_VM2_name'), '_OsDisk_1_245e38d14ac444f3bb98c555480def5b'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_App_VM2_name')]",
          "adminUsername": "demouser",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm280_name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachines_App_VM3_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm3391_name'))]"
      ],
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B4ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_App_VM3_name'), '_OsDisk_1_7d03de8869b1417cabbaabc464f2f71c')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_App_VM3_name'), '_OsDisk_1_7d03de8869b1417cabbaabc464f2f71c'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_App_VM3_name')]",
          "adminUsername": "demouser",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm3391_name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachines_App_VM4_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm4492_name'))]"
      ],
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B4ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_App_VM4_name'), '_OsDisk_1_b2d4001c4e28471ba0eb46cf0d7a8c0c')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_App_VM4_name'), '_OsDisk_1_b2d4001c4e28471ba0eb46cf0d7a8c0c'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_App_VM4_name')]",
          "adminUsername": "demouser ",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "enableHotpatching": false
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_app_vm4492_name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[parameters('virtualMachines_OracleDB_VM_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_oracledb_vm533_name'))]"
      ],
      "zones": [
        "1"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_E8-2s_v4"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "oracle",
            "offer": "oracle-database-19-3",
            "sku": "oracle-database-19-0904",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(parameters('virtualMachines_OracleDB_VM_name'), '_OsDisk_1_e47894a2b24247a4a8282a164d752527')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_OracleDB_VM_name'), '_OsDisk_1_e47894a2b24247a4a8282a164d752527'))]"
            }
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_OracleDB_VM_name')]",
          "adminUsername": "azureuser",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/azureuser/.ssh/authorized_keys",
                  "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDm/vjQFbq7bf/2QX9PcUcvZHF3\r\nJwtcoOimhpsdZmjD40PlRSGxhm+7jsW3VElozloZs5aSKpzHFTRhWk4ByDzRaBm+\r\nck34mN7IgsieaCfJeXULpPORpQkCdd+CSn+dIxaIIR1WaoXbXezgQcYAHtf0RQxi\r\nWK9msotS/uxMiTYAs6YoANPJlevGghX1CNJWndbUNUiOvwPiq9jfAgHi4hMc6ASx\r\n7dGGGK1gz8fFjaRCz+Vw3G83xwmmbdbt9YaoxmivYMx+g+uYGYxxopW2/S1GjX5A\r\ngTJsE+6aXfqlc3ez+tbtFu7Ww1iwrAqlYl3RoQjPKvg/67WbMLrsq9RfS1qUyttr\r\nsdNOFYd57XsB3OjLtMNsuO038oPyZ3B7cr+Q+W7FD8qHi73sf/E0m+/i0vfGmiks\r\n6s8FIGJMmGokYkTyn7Vxt1ZnHfqH+tVHwDYwlS7i1cYlFFbZnXICXRjEBxZLp5E0\r\ng3SY4pENEzJDkT0b75CvixuJMnrk5BySSC1/5O0= generated-by-azure\r\n"
                }
              ]
            },
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_oracledb_vm533_name'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers/backendAddressPools",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('loadBalancers_AppLoadBalancer_name'), '/myBackendPool')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_AppLoadBalancer_name'))]"
      ],
      "properties": {
        "loadBalancerBackendAddresses": [
          {
            "name": "Test-alex_app-vm1617ipconfig1",
            "properties": {}
          },
          {
            "name": "Test-alex_app-vm3391ipconfig1",
            "properties": {}
          },
          {
            "name": "Test-alex_app-vm280ipconfig1",
            "properties": {}
          },
          {
            "name": "Test-alex_app-vm4492ipconfig1",
            "properties": {}
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM1_nsg_name'), '/CASG-Rule-101')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "VirtualNetwork",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 101,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM2_nsg_name'), '/CASG-Rule-101')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "VirtualNetwork",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 101,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'), '/CASG-Rule-101')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "VirtualNetwork",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 101,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM1_nsg_name'), '/CASG-Rule-102')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetPublic",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 102,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM2_nsg_name'), '/CASG-Rule-102')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetPublic",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 102,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'), '/CASG-Rule-102')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetPublic",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 102,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM1_nsg_name'), '/CASG-Rule-103')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetSaw",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 103,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM2_nsg_name'), '/CASG-Rule-103')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetSaw",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 103,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'), '/CASG-Rule-103')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "CorpNetSaw",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 103,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM1_nsg_name'), '/CASG-Rule-104')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "sourceAddressPrefix": "Internet",
        "destinationAddressPrefix": "*",
        "access": "Deny",
        "priority": 107,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [
          "13",
          "17",
          "19",
          "22",
          "23",
          "53",
          "69",
          "111",
          "119",
          "123",
          "135",
          "137",
          "138",
          "139",
          "161",
          "162",
          "389",
          "445",
          "512",
          "514",
          "593",
          "636",
          "873",
          "1433",
          "1434",
          "1900",
          "2049",
          "2301",
          "2381",
          "3268",
          "3306",
          "3389",
          "4333",
          "5353",
          "5432",
          "5800",
          "5900",
          "5985",
          "5986",
          "6379",
          "7000",
          "7001",
          "7199",
          "9042",
          "9160",
          "9300",
          "11211",
          "16379",
          "26379",
          "27017"
        ],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM2_nsg_name'), '/CASG-Rule-104')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "sourceAddressPrefix": "Internet",
        "destinationAddressPrefix": "*",
        "access": "Deny",
        "priority": 107,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [
          "13",
          "17",
          "19",
          "22",
          "23",
          "53",
          "69",
          "111",
          "119",
          "123",
          "135",
          "137",
          "138",
          "139",
          "161",
          "162",
          "389",
          "445",
          "512",
          "514",
          "593",
          "636",
          "873",
          "1433",
          "1434",
          "1900",
          "2049",
          "2301",
          "2381",
          "3268",
          "3306",
          "3389",
          "4333",
          "5353",
          "5432",
          "5800",
          "5900",
          "5985",
          "5986",
          "6379",
          "7000",
          "7001",
          "7199",
          "9042",
          "9160",
          "9300",
          "11211",
          "16379",
          "26379",
          "27017"
        ],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'), '/CASG-Rule-104')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
        "protocol": "*",
        "sourcePortRange": "*",
        "sourceAddressPrefix": "Internet",
        "destinationAddressPrefix": "*",
        "access": "Deny",
        "priority": 109,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [
          "13",
          "17",
          "19",
          "22",
          "23",
          "53",
          "69",
          "111",
          "119",
          "123",
          "135",
          "137",
          "138",
          "139",
          "161",
          "162",
          "389",
          "445",
          "512",
          "514",
          "593",
          "636",
          "873",
          "1433",
          "1434",
          "1900",
          "2049",
          "2301",
          "2381",
          "3268",
          "3306",
          "3389",
          "4333",
          "5353",
          "5432",
          "5800",
          "5900",
          "5985",
          "5986",
          "6379",
          "7000",
          "7001",
          "7199",
          "9042",
          "9160",
          "9300",
          "11211",
          "16379",
          "26379",
          "27017"
        ],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'), '/Internet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 105,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM1_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 104,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('networkSecurityGroups_App_VM2_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 104,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworks_Test_alex_vnet_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.2.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
              },
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "10.2.1.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_Test_alex_vnet_name'), '/GatewaySubnet')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Test_alex_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.2.1.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('vaults_RSV_test_name'), '/DailyPolicy-knkj99ac')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RSV_test_name'))]"
      ],
      "properties": {
        "backupManagementType": "AzureStorage",
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": [
            "2020-09-30T19:30:00Z"
          ],
          "scheduleWeeklyFrequency": 0
        },
        "retentionPolicy": {
          "retentionPolicyType": "LongTermRetentionPolicy",
          "dailySchedule": {
            "retentionTimes": [
              "2020-09-30T19:30:00Z"
            ],
            "retentionDuration": {
              "count": 30,
              "durationType": "Days"
            }
          }
        },
        "timeZone": "UTC",
        "protectedItemsCount": 0
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('vaults_RSV_test_name'), '/DefaultPolicy')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RSV_test_name'))]"
      ],
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "instantRPDetails": {},
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": [
            "2021-04-17T02:00:00Z"
          ],
          "scheduleWeeklyFrequency": 0
        },
        "retentionPolicy": {
          "retentionPolicyType": "LongTermRetentionPolicy",
          "dailySchedule": {
            "retentionTimes": [
              "2021-04-17T02:00:00Z"
            ],
            "retentionDuration": {
              "count": 30,
              "durationType": "Days"
            }
          }
        },
        "instantRpRetentionRangeInDays": 2,
        "timeZone": "UTC",
        "protectedItemsCount": 0
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('vaults_RSV_test_name'), '/HourlyLogBackup')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RSV_test_name'))]"
      ],
      "properties": {
        "backupManagementType": "AzureWorkload",
        "workLoadType": "SQLDataBase",
        "settings": {
          "timeZone": "UTC",
          "issqlcompression": false,
          "isCompression": false
        },
        "subProtectionPolicy": [
          {
            "policyType": "Full",
            "schedulePolicy": {
              "schedulePolicyType": "SimpleSchedulePolicy",
              "scheduleRunFrequency": "Daily",
              "scheduleRunTimes": [
                "2021-04-17T02:00:00Z"
              ],
              "scheduleWeeklyFrequency": 0
            },
            "retentionPolicy": {
              "retentionPolicyType": "LongTermRetentionPolicy",
              "dailySchedule": {
                "retentionTimes": [
                  "2021-04-17T02:00:00Z"
                ],
                "retentionDuration": {
                  "count": 30,
                  "durationType": "Days"
                }
              }
            }
          },
          {
            "policyType": "Log",
            "schedulePolicy": {
              "schedulePolicyType": "LogSchedulePolicy",
              "scheduleFrequencyInMins": 60
            },
            "retentionPolicy": {
              "retentionPolicyType": "SimpleRetentionPolicy",
              "retentionDuration": {
                "count": 30,
                "durationType": "Days"
              }
            }
          }
        ],
        "protectedItemsCount": 0
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
      "apiVersion": "2018-07-10",
      "name": "[concat(parameters('vaults_RSV_test_name'), '/defaultAlertSetting')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RSV_test_name'))]"
      ],
      "properties": {
        "sendToOwners": "DoNotSend",
        "customEmailAddresses": []
      }
    },
    {
      "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
      "apiVersion": "2018-07-10",
      "name": "[concat(parameters('vaults_RSV_test_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RSV_test_name'))]"
      ],
      "properties": {
        "migrationSolutionId": "[parameters('replicationVaultSettings_default_migrationSolutionId')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccounts_appfilesharetest_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_appfilesharetest_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccounts_appfilesharetest_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_appfilesharetest_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "protocolSettings": {
          "smb": {}
        },
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 14
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccounts_appfilesharetest_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_appfilesharetest_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccounts_appfilesharetest_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_appfilesharetest_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2020-11-01",
      "name": "[parameters('loadBalancers_AppLoadBalancer_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_myPublicIP_name'))]",
        "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
      ],
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_myPublicIP_name'))]"
              },
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "myBackendPool",
            "properties": {
              "loadBalancerBackendAddresses": [
                {
                  "name": "Test-alex_app-vm1617ipconfig1",
                  "properties": {}
                },
                {
                  "name": "Test-alex_app-vm3391ipconfig1",
                  "properties": {}
                },
                {
                  "name": "Test-alex_app-vm280ipconfig1",
                  "properties": {}
                },
                {
                  "name": "Test-alex_app-vm4492ipconfig1",
                  "properties": {}
                }
              ]
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "myHTTPRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_AppLoadBalancer_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_AppLoadBalancer_name')), '/probes/myHealthProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "myHealthProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "outboundRules": [],
        "inboundNatPools": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_oracledb_vm533_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_OracleDB_VM_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.8",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_OracleDB_VM_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworkGateways",
      "apiVersion": "2020-11-01",
      "name": "[parameters('virtualNetworkGateways_VNet1GW_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VNet1GWpip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'GatewaySubnet')]"
      ],
      "properties": {
        "enablePrivateIpAddress": false,
        "ipConfigurations": [
          {
            "name": "default",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VNet1GWpip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'GatewaySubnet')]"
              }
            }
          }
        ],
        "sku": {
          "name": "VpnGw2",
          "tier": "VpnGw2"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": false,
        "activeActive": false,
        "bgpSettings": {
          "asn": 65515,
          "bgpPeeringAddress": "10.2.1.254",
          "peerWeight": 0,
          "bgpPeeringAddresses": [
            {
              "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_VNet1GW_name')), '/ipConfigurations/default')]",
              "customBgpIpAddresses": []
            }
          ]
        },
        "vpnGatewayGeneration": "Generation2"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-11-01",
      "name": "[concat(parameters('virtualNetworks_Test_alex_vnet_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Test_alex_vnet_name'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.2.0.0/24",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Test_alex_vnet_NSG_CASG_name'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('storageAccounts_appfilesharetest_name'), '/default/', parameters('storageAccounts_appfilesharetest_name'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_appfilesharetest_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_appfilesharetest_name'))]"
      ],
      "properties": {
        "accessTier": "TransactionOptimized",
        "shareQuota": 5000,
        "enabledProtocols": "SMB"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_app_vm3391_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM3_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.6",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM3_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_app_vm4492_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM4_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.7",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM4_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_app_vm1617_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM1_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM1_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('networkInterfaces_app_vm280_name')]",
      "location": "westeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM2_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_App_VM2_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Test_alex_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_AppLoadBalancer_name'), 'myBackendPool')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_App_VM2_nsg_name'))]"
        }
      }
    }
  ]
}